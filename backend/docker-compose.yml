version: "3.2"
services:

  minio:
    image: bitnami/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    
    environment:
      MINIO_ROOT_USER: user1
      MINIO_ROOT_PASSWORD: passw12345
      MINIO_SERVER_HOST: localhost
      MINIO_SCHEME: http
      MINIO_API_CORS_ALLOW_ORIGIN: '*'
    networks:
      - mynet

  mc:
    image: minio/mc
    container_name: mc
    network_mode: host
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -C "
      /usr/bin/mc config host add --api s3v2 minio http://localhost:9000/ user1 passw12345;
      /usr/bin/mc rm -r --force minio/first-bucket;
      /usr/bin/mc mb -p minio/first-bucket;
      /usr/bin/mc policy set public minio/first-bucket;
      /usr/bin/mc admin trace minio -a --debug;
      "

  mongodb:
    image: mongo:latest
    container_name: 'mongodb'
    ports:
      - 27017:27017
    networks:
      - mynet
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mynet

  backend:    
    restart: always
    image: api-backend:latest
    build:
      context: ./
    volumes:
      - .:/src
      
    depends_on:
      - mongodb
      - rabbitmq
      - minio
    environment:
      PORT: 4000
      AMQP_URL: amqp://rabbitmq:5672
      MONGODB: mongodb://mongodb:27017/mydb
      ACCESS_TOKEN_SECRET: kamehameha
      BUCKET_HOST: http://localhost:9000/
      BUCKET_ENDPOINT: http://minio:9000/
      BUCKET_ACCESS_KEY: user
      BUCKET_SECRET_KEY: passw
    ports:
        - 4000:4000
    networks:
      - mynet

networks:
  mynet:
    driver: bridge      